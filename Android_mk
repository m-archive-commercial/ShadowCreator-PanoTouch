# Android.mk通常需要定义好LOCAL_PATH，表示当前工作路径，函数my-dir是编译系统提供的，返回当前路径
LOCAL_PATH := $(call my-dir)
# 这一步操作主要是清空之前定义的LOCAL_XXX开头的变量，是必须要的操作。CLEAR_VARS 变量由Build System提供。并指向一个指定的GNU Makefile，由它负责清理很多LOCAL_xxx，例如：LOCAL_MODULE, LOCAL_SRC_FILES, LOCAL_STATIC_LIBRARIES等等。但不清理LOCAL_PATH.
# 这个清理动作是必须的，因为所有的编译控制文件由同一个GNU Make解析和执行，其变量是全局的。所以清理后才能避免相互影响。
include $(CLEAR_VARS)

#模块名，并且这个名字要加入到PRODUCT_PACKAGES中
LOCAL_MODULE := LuciTouch

# 依赖
LOCAL_PREBUILT_JNI_LIBS := \
    lib/armeabi-v7a/libnative_luci_touch_honghu_gamepad.so \
	libnative_luci_touch_mouse_driver.so

#不管是user 还是eng 版本都会编译此app ;
LOCAL_MODULE_TAGS := optional

# 定义编译模块所需的源文件 ;
LOCAL_SRC_FILES := $(LOCAL_MODULE).apk

#定义编译完成之后的类型：除了APPS，还有ETC，EXECUTABLES（.bin）SHARED_LIBRARIES(.so) 等选择值
LOCAL_MODULE_CLASS := APPS

#定义编译完成之后模块的后缀
LOCAL_MODULE_SUFFIX := $(COMMON_ANDROID_PACKAGE_SUFFIX)

#定义使用原app签名可用选择项platform，shared，media
LOCAL_CERTIFICATE := PRESIGNED

#将apk编进“/system/priv-app/目录”，如果为false，或者不加这句话，就会编进“/system/app” 目录, 二者区别在于前者的权限要高于后者,即不可卸载
LOCAL_PRIVILEGED_MODULE := true

#不进行odex化
LOCAL_DEX_PREOPT := false

# 定义编译出来的目标文件，如动态库，静态库，jar包以及apk
include $(BUILD_PREBUILT)